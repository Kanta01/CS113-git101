git branch <branch-name> == สร้างbranch
  git branch == ตรวจสอบว่ามีbranchอะไรบ้าง
git checkout <branch-name> == ย้ายbranchไปที่<branch-name>
(ไฟล์ที่เพิ่มในbranchอื่นจะหายไปเมื่อออกจากbranchนั้น)

git merge <branch-name> == การรวม<branch-name>เข้าไปในbranchที่checkoutอยู่
  ถ้าไม่มีปัญหาอะไร gitจะสร้างcommitแล้วให้ใส่ชื่อ
    ถ้าจะใช้ default merge commit message ให้กดESCแล้วพิมพ์ :wq! แล้วenter
  ถ้ามีปัญหาที่เกิดจากการแก้ไขข้อมูลในไฟล์เดียวกันบรรทัดเดียวกันแต่อยู่คนละbranch gitจะตัดสินใจไม่ได้ว่าจะใช้ข้อมูลจากbranchไหน
    ให้เปิดไฟล์ที่มีปัญหาแล้วแก้ไขข้อมูลให้เป็นไปตามที่ต้องการ
    แล้วจึงcommitการmergeนั้น
  เมื่อmergeแล้วไม่จำเป็นต้องpush branchย่อยอีก

git pull origin master == การดึงข้อมูลที่เปลี่ยนแปลงไปลงมาที่เครื่องของเรา โดยการเปลี่ยนแปลงนั้นเกิดจากการที่มีทำงานพร้อมกัน2คนขึ้นไป
  ถ้ามีปัญหาที่เกิดจากการแก้ไขข้อมูลในไฟล์เดียวกันบรรทัดเดียวกันในคนละdirectory
    ให้แก้ไขปัญหานั้นแล้วcommitและค่อยpushใหม่